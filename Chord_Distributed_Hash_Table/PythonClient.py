#!/usr/bin/env python

import sys
import glob

# these two lines are mandatory to include
sys.path.append('gen-py')
sys.path.insert(0, glob.glob('/home/yaoliu/src_code/local/lib/lib/python2.7/site-packages')[0])

# import from code generated by IDL compiler (thrift)
from chord import FileStore
from chord.ttypes import SystemException, RFileMetadata, RFile, NodeID

# importing python thrift libraries
from thrift import Thrift
from thrift.transport import TSocket
from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol


def main():
    # Make socket
    transport = TSocket.TSocket(sys.argv[1], int(sys.argv[2]))

    # Buffering is critical. Raw sockets are very slow
    transport = TTransport.TBufferedTransport(transport)

    # Wrap in a protocol
    protocol = TBinaryProtocol.TBinaryProtocol(transport)

    # Create a client to use the protocol encoder
    client = FileStore.Client(protocol)

    # Connect!
    transport.open()

    # writing to file - need object of RFileMetadata and RFile 
    rFileMetadata = RFileMetadata()
    rFileMetadata.filename = 'testdp.txt'

    rFile = RFile()
    rFile.meta = rFileMetadata
    rFile.content = "Hi I am client"

    client.writeFile(rFile)

    # read file
    rFile2 = client.readFile("testdp.txt")
    print("\nOn Client Side received \nFile -- " + rFile2.meta.filename + "\nVersion -- " + str(rFile2.meta.version)
          + "\nContent -- " + str(rFile2.content) + "\nContentHash -- " + str(rFile2.meta.contentHash) + "\n")

    # Close!
    transport.close()


if __name__ == '__main__':
    try:
        main()
    except Thrift.TException as tx:
        print('%s' % tx.message)
